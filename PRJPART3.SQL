SELECT FFNAME, FLNAME FROM FACULTY WHERE FSUPERVISOR IS NOT NULL;

SELECT * FROM CATALOG WHERE CCOURSENUM LIKE 'IS%';

SELECT DISTINCT CATALOG.CCOURSENUM, CATALOG.CDESC FROM CATALOG, COURSE_OFFERINGS WHERE (CATALOG.CCOURSENUM = COURSE_OFFERINGS.COURSENUM) AND COURSE_OFFERINGS.COYEAR = TO_DATE('1999', 'YYYY') AND COURSE_OFFERINGS.COTERM = 'Fall';

SELECT FDEPT, FRANK, AVG(FSALARY) FROM FACULTY GROUP BY FDEPT, FRANK;

SELECT CATALOG.CCOURSENUM, CATALOG.CDESC, FACULTY.FFNAME, FACULTY.FLNAME FROM CATALOG, FACULTY, COURSE_OFFERINGS WHERE COURSE_OFFERINGS.COYEAR = TO_DATE('1999', 'YYYY') AND COURSE_OFFERINGS.COTERM = 'Fall' AND
COURSE_OFFERINGS.COURSENUM = CATALOG.CCOURSENUM AND COURSE_OFFERINGS.COSSN = FACULTY.FSSN AND COURSE_OFFERINGS.COURSENUM LIKE 'IS%';

SELECT SMAJORCODE, AVG(STUDENT.SGPA) FROM STUDENT GROUP BY SMAJORCODE;

SELECT COUNT(COURSENUM), COUNT(DISTINCT COURSENUM) FROM COURSE_OFFERINGS GROUP BY COYEAR;

SELECT AVG(SGPA) FROM STUDENT WHERE (SCLASS = 'JR' OR SCLASS = 'SR') AND SGPA >= 3.1 GROUP BY SMAJORCODE;

SELECT MAX(SGPA), MIN(SGPA) FROM STUDENT GROUP BY SMAJORCODE;

SELECT STUDENT.SFNAME, STUDENT.SLNAME, COURSE_OFFERINGS.COURSENUM, COURSE_OFFERINGS.COTERM, COURSE_OFFERINGS.COYEAR, COURSE_OFFERINGS.COROOM, COURSE_OFFERINGS.COSSN FROM STUDENT, ENROLLMENT, COURSE_OFFERINGS WHERE ENROLLMENT.ESSN = STUDENT.SSSN AND ENROLLMENT.ECOURSEKEY = COURSE_OFFERINGS.COURSEKEY; 

